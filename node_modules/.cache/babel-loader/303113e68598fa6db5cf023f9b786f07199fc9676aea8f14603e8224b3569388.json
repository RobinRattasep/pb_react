{"ast":null,"code":"import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { useSelector } from 'react-redux';\nimport { appReducer } from './reducers';\nimport thunk from 'redux-thunk';\nimport { StorageService } from '../service/Storage';\nconst CustomStorage = {\n  getItem: async function (key) {\n    return await StorageService.get(key);\n  },\n  setItem: async function (key, value) {\n    return await StorageService.set(key, value);\n  },\n  removeItem: async function (key) {\n    return await StorageService.remove(key);\n  }\n};\nexport const persistConfig = {\n  key: 'root',\n  storage: CustomStorage\n};\nconst reducer = combineReducers({\n  reducer: persistReducer(persistConfig, appReducer)\n});\nconst store = configureStore({\n  reducer,\n  middleware: [thunk]\n});\nconst useAppDispatch = store.dispatch;\nconst useAppSelector = useSelector;\nconst persistor = persistStore(store);\nexport { useAppDispatch, useAppSelector, store, persistor };","map":{"version":3,"names":["combineReducers","configureStore","persistStore","persistReducer","useSelector","appReducer","thunk","StorageService","CustomStorage","getItem","key","get","setItem","value","set","removeItem","remove","persistConfig","storage","reducer","store","middleware","useAppDispatch","dispatch","useAppSelector","persistor"],"sources":["/Users/robinrattasep/Downloads/pb_react/node_modules/pocketbase-react/es/store/store.js"],"sourcesContent":["import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { useSelector } from 'react-redux';\nimport { appReducer } from './reducers';\nimport thunk from 'redux-thunk';\nimport { StorageService } from '../service/Storage';\nconst CustomStorage = {\n  getItem: async (key, ..._args) => {\n    return await StorageService.get(key);\n  },\n  setItem: async (key, value, ..._args) => {\n    return await StorageService.set(key, value);\n  },\n  removeItem: async (key, ..._args) => {\n    return await StorageService.remove(key);\n  }\n};\nexport const persistConfig = {\n  key: 'root',\n  storage: CustomStorage\n};\nconst reducer = combineReducers({\n  reducer: persistReducer(persistConfig, appReducer)\n});\nconst store = configureStore({\n  reducer,\n  middleware: [thunk]\n});\nconst useAppDispatch = store.dispatch;\nconst useAppSelector = useSelector;\nconst persistor = persistStore(store);\nexport { useAppDispatch, useAppSelector, store, persistor };"],"mappings":"AAAA,SAASA,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAClE,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,YAAY;AACvC,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,cAAc,QAAQ,oBAAoB;AACnD,MAAMC,aAAa,GAAG;EACpBC,OAAO,EAAE,eAAAA,CAAOC,GAAG,EAAe;IAChC,OAAO,MAAMH,cAAc,CAACI,GAAG,CAACD,GAAG,CAAC;EACtC,CAAC;EACDE,OAAO,EAAE,eAAAA,CAAOF,GAAG,EAAEG,KAAK,EAAe;IACvC,OAAO,MAAMN,cAAc,CAACO,GAAG,CAACJ,GAAG,EAAEG,KAAK,CAAC;EAC7C,CAAC;EACDE,UAAU,EAAE,eAAAA,CAAOL,GAAG,EAAe;IACnC,OAAO,MAAMH,cAAc,CAACS,MAAM,CAACN,GAAG,CAAC;EACzC;AACF,CAAC;AACD,OAAO,MAAMO,aAAa,GAAG;EAC3BP,GAAG,EAAE,MAAM;EACXQ,OAAO,EAAEV;AACX,CAAC;AACD,MAAMW,OAAO,GAAGnB,eAAe,CAAC;EAC9BmB,OAAO,EAAEhB,cAAc,CAACc,aAAa,EAAEZ,UAAU;AACnD,CAAC,CAAC;AACF,MAAMe,KAAK,GAAGnB,cAAc,CAAC;EAC3BkB,OAAO;EACPE,UAAU,EAAE,CAACf,KAAK;AACpB,CAAC,CAAC;AACF,MAAMgB,cAAc,GAAGF,KAAK,CAACG,QAAQ;AACrC,MAAMC,cAAc,GAAGpB,WAAW;AAClC,MAAMqB,SAAS,GAAGvB,YAAY,CAACkB,KAAK,CAAC;AACrC,SAASE,cAAc,EAAEE,cAAc,EAAEJ,KAAK,EAAEK,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}