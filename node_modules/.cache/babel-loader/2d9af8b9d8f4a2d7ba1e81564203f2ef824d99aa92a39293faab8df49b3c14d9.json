{"ast":null,"code":"var _jsxFileName = \"/Users/robinrattasep/Downloads/pb_react/src/App.js\",\n  _s = $RefreshSig$();\nimport Auth from \"./Auth\";\nimport { useState } from \"react\";\nimport pb from \"lib/pocketbase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(pb.authStore.isValid);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  function handleLogout() {\n    pb.authStore.clear();\n    setIsLoggedIn(false);\n  }\n  async function handleSendMessage(e) {\n    e.preventDefault();\n    if (!message.trim()) return;\n    try {\n      const {\n        id\n      } = await pb.collection(\"chat\").save({\n        text: message.trim(),\n        createdAt: new Date(),\n        sender: pb.authStore.model.email\n      });\n      setMessage(\"\");\n      setMessages(prevMessages => [...prevMessages, {\n        id,\n        text: message.trim(),\n        sender: pb.authStore.model.email\n      }]);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async function fetchMessages() {\n    const data = await pb.collection(\"chat\").find({\n      limit: 50\n    });\n    setMessages(data);\n  }\n  pb.authStore.onAuthStateChanged(loggedIn => {\n    setIsLoggedIn(loggedIn);\n    if (loggedIn) {\n      fetchMessages();\n      pb.collection(\"chat\").on(\"created\", message => {\n        setMessages(prevMessages => [...prevMessages, message]);\n      });\n    } else {\n      pb.collection(\"chat\").off(\"created\");\n      setMessages([]);\n    }\n  });\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Logged In: \", pb.authStore.model.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Global Chatroom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messages.map(_ref => {\n          let {\n            id,\n            text,\n            sender\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [sender, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), \" \", text]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Type your message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"MvDM2XEJ670Kgl5cy0ZtOSp2C5c=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Auth","useState","pb","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoggedIn","setIsLoggedIn","authStore","isValid","message","setMessage","messages","setMessages","handleLogout","clear","handleSendMessage","e","preventDefault","trim","id","collection","save","text","createdAt","Date","sender","model","email","prevMessages","error","console","log","fetchMessages","data","find","limit","onAuthStateChanged","loggedIn","on","off","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","_ref","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/robinrattasep/Downloads/pb_react/src/App.js"],"sourcesContent":["import Auth from \"./Auth\";\nimport { useState } from \"react\";\nimport pb from \"lib/pocketbase\";\n\nexport default function App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(pb.authStore.isValid);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  function handleLogout() {\n    pb.authStore.clear();\n    setIsLoggedIn(false);\n  }\n\n  async function handleSendMessage(e) {\n    e.preventDefault();\n    if (!message.trim()) return;\n\n    try {\n      const { id } = await pb.collection(\"chat\").save({\n        text: message.trim(),\n        createdAt: new Date(),\n        sender: pb.authStore.model.email,\n      });\n      setMessage(\"\");\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { id, text: message.trim(), sender: pb.authStore.model.email },\n      ]);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function fetchMessages() {\n    const data = await pb.collection(\"chat\").find({ limit: 50 });\n    setMessages(data);\n  }\n\n  pb.authStore.onAuthStateChanged((loggedIn) => {\n    setIsLoggedIn(loggedIn);\n    if (loggedIn) {\n      fetchMessages();\n      pb.collection(\"chat\").on(\"created\", (message) => {\n        setMessages((prevMessages) => [...prevMessages, message]);\n      });\n    } else {\n      pb.collection(\"chat\").off(\"created\");\n      setMessages([]);\n    }\n  });\n\n  if (isLoggedIn) {\n    return (\n      <>\n        <h1>Logged In: {pb.authStore.model.email}</h1>\n        <button onClick={handleLogout}>Logout</button>\n        <h2>Global Chatroom</h2>\n        <ul>\n          {messages.map(({ id, text, sender }) => (\n            <li key={id}>\n              <strong>{sender}:</strong> {text}\n            </li>\n          ))}\n        </ul>\n        <form onSubmit={handleSendMessage}>\n          <input\n            type=\"text\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            placeholder=\"Type your message\"\n          />\n          <button type=\"submit\">Send</button>\n        </form>\n      </>\n    );\n  }\n\n  return <Auth />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}