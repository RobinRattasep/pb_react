{"ast":null,"code":"import * as React from 'react';\nimport { createContext, useEffect } from 'react';\nimport PocketBase from 'pocketbase';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from '../store/store';\nimport { ClientProvider } from './client';\nimport { ContentProvider } from './content';\nimport { AuthProvider } from './auth';\nimport { StorageService } from '../service/Storage';\nexport const PocketbaseContext = createContext(null);\nexport const Pocketbase = props => {\n  const [client, setClient] = React.useState(null);\n  const [initialCollections, setInitialCollections] = React.useState();\n  useEffect(() => {\n    const client = new PocketBase(props.serverURL);\n    client.authStore.onChange(async () => {\n      await StorageService.set(StorageService.Constants.COOKIE, client.authStore.exportToCookie());\n      setInitialCollections([]);\n      setInitialCollections(props.initialCollections);\n    });\n    StorageService.get(StorageService.Constants.COOKIE).then(cookie => {\n      if (cookie) {\n        client.authStore.loadFromCookie(cookie);\n        setInitialCollections([]);\n        setInitialCollections(props.initialCollections);\n      }\n      setClient(client);\n    });\n  }, [props.serverURL]);\n  return client ? /*#__PURE__*/React.createElement(ClientProvider, {\n    client: client\n  }, /*#__PURE__*/React.createElement(Provider, {\n    store: store\n  }, /*#__PURE__*/React.createElement(PersistGate, {\n    persistor: persistor\n  }, /*#__PURE__*/React.createElement(AuthProvider, {\n    webRedirectUrl: props.webRedirectUrl,\n    mobileRedirectUrl: props.mobileRedirectUrl,\n    openURL: props.openURL\n  }, /*#__PURE__*/React.createElement(ContentProvider, {\n    collections: initialCollections\n  }, props.children))))) : null;\n};","map":{"version":3,"names":["React","createContext","useEffect","PocketBase","Provider","PersistGate","store","persistor","ClientProvider","ContentProvider","AuthProvider","StorageService","PocketbaseContext","Pocketbase","props","client","setClient","useState","initialCollections","setInitialCollections","serverURL","authStore","onChange","set","Constants","COOKIE","exportToCookie","get","then","cookie","loadFromCookie","createElement","webRedirectUrl","mobileRedirectUrl","openURL","collections","children"],"sources":["/Users/robinrattasep/Downloads/pb_react/node_modules/pocketbase-react/es/context/Pocketbase.js"],"sourcesContent":["import * as React from 'react';\nimport { createContext, useEffect } from 'react';\nimport PocketBase from 'pocketbase';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from '../store/store';\nimport { ClientProvider } from './client';\nimport { ContentProvider } from './content';\nimport { AuthProvider } from './auth';\nimport { StorageService } from '../service/Storage';\nexport const PocketbaseContext = createContext(null);\nexport const Pocketbase = props => {\n  const [client, setClient] = React.useState(null);\n  const [initialCollections, setInitialCollections] = React.useState();\n  useEffect(() => {\n    const client = new PocketBase(props.serverURL);\n    client.authStore.onChange(async () => {\n      await StorageService.set(StorageService.Constants.COOKIE, client.authStore.exportToCookie());\n      setInitialCollections([]);\n      setInitialCollections(props.initialCollections);\n    });\n    StorageService.get(StorageService.Constants.COOKIE).then(cookie => {\n      if (cookie) {\n        client.authStore.loadFromCookie(cookie);\n        setInitialCollections([]);\n        setInitialCollections(props.initialCollections);\n      }\n      setClient(client);\n    });\n  }, [props.serverURL]);\n  return client ? /*#__PURE__*/React.createElement(ClientProvider, {\n    client: client\n  }, /*#__PURE__*/React.createElement(Provider, {\n    store: store\n  }, /*#__PURE__*/React.createElement(PersistGate, {\n    persistor: persistor\n  }, /*#__PURE__*/React.createElement(AuthProvider, {\n    webRedirectUrl: props.webRedirectUrl,\n    mobileRedirectUrl: props.mobileRedirectUrl,\n    openURL: props.openURL\n  }, /*#__PURE__*/React.createElement(ContentProvider, {\n    collections: initialCollections\n  }, props.children))))) : null;\n};"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,WAAW,QAAQ,iCAAiC;AAC7D,SAASC,KAAK,EAAEC,SAAS,QAAQ,gBAAgB;AACjD,SAASC,cAAc,QAAQ,UAAU;AACzC,SAASC,eAAe,QAAQ,WAAW;AAC3C,SAASC,YAAY,QAAQ,QAAQ;AACrC,SAASC,cAAc,QAAQ,oBAAoB;AACnD,OAAO,MAAMC,iBAAiB,GAAGX,aAAa,CAAC,IAAI,CAAC;AACpD,OAAO,MAAMY,UAAU,GAAGC,KAAK,IAAI;EACjC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhB,KAAK,CAACiB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGnB,KAAK,CAACiB,QAAQ,EAAE;EACpEf,SAAS,CAAC,MAAM;IACd,MAAMa,MAAM,GAAG,IAAIZ,UAAU,CAACW,KAAK,CAACM,SAAS,CAAC;IAC9CL,MAAM,CAACM,SAAS,CAACC,QAAQ,CAAC,YAAY;MACpC,MAAMX,cAAc,CAACY,GAAG,CAACZ,cAAc,CAACa,SAAS,CAACC,MAAM,EAAEV,MAAM,CAACM,SAAS,CAACK,cAAc,EAAE,CAAC;MAC5FP,qBAAqB,CAAC,EAAE,CAAC;MACzBA,qBAAqB,CAACL,KAAK,CAACI,kBAAkB,CAAC;IACjD,CAAC,CAAC;IACFP,cAAc,CAACgB,GAAG,CAAChB,cAAc,CAACa,SAAS,CAACC,MAAM,CAAC,CAACG,IAAI,CAACC,MAAM,IAAI;MACjE,IAAIA,MAAM,EAAE;QACVd,MAAM,CAACM,SAAS,CAACS,cAAc,CAACD,MAAM,CAAC;QACvCV,qBAAqB,CAAC,EAAE,CAAC;QACzBA,qBAAqB,CAACL,KAAK,CAACI,kBAAkB,CAAC;MACjD;MACAF,SAAS,CAACD,MAAM,CAAC;IACnB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACD,KAAK,CAACM,SAAS,CAAC,CAAC;EACrB,OAAOL,MAAM,GAAG,aAAaf,KAAK,CAAC+B,aAAa,CAACvB,cAAc,EAAE;IAC/DO,MAAM,EAAEA;EACV,CAAC,EAAE,aAAaf,KAAK,CAAC+B,aAAa,CAAC3B,QAAQ,EAAE;IAC5CE,KAAK,EAAEA;EACT,CAAC,EAAE,aAAaN,KAAK,CAAC+B,aAAa,CAAC1B,WAAW,EAAE;IAC/CE,SAAS,EAAEA;EACb,CAAC,EAAE,aAAaP,KAAK,CAAC+B,aAAa,CAACrB,YAAY,EAAE;IAChDsB,cAAc,EAAElB,KAAK,CAACkB,cAAc;IACpCC,iBAAiB,EAAEnB,KAAK,CAACmB,iBAAiB;IAC1CC,OAAO,EAAEpB,KAAK,CAACoB;EACjB,CAAC,EAAE,aAAalC,KAAK,CAAC+B,aAAa,CAACtB,eAAe,EAAE;IACnD0B,WAAW,EAAEjB;EACf,CAAC,EAAEJ,KAAK,CAACsB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;AAC/B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}