{"ast":null,"code":"import * as store from '../store/store';\nimport * as React from 'react';\nimport { createContext, useEffect } from 'react';\nimport { useClientContext } from '../hooks/useClientContext';\nimport { recordsAction } from '../store/actions';\nimport { subscriptionsAction } from '../store/actions';\nexport const ContentContext = createContext({});\nexport const ContentProvider = props => {\n  const client = useClientContext();\n  const dispatch = store.useAppDispatch;\n  function tempErrorHandler(error) {\n    var _error$originalError;\n    // TODO: Handle error\n    // IDEA: Create new ErrorContext and Update it with error\n    if ((error == null ? void 0 : (_error$originalError = error.originalError) == null ? void 0 : _error$originalError.name) !== 'AbortError') {\n      console.log('Error in content provider', JSON.stringify(error));\n    }\n  }\n  const actions = {\n    subscribe: async collectionName => {\n      await (client == null ? void 0 : client.realtime.subscribe(collectionName, event => {\n        switch (event.action) {\n          case 'create':\n            dispatch(recordsAction.addRecord(collectionName, event.record));\n            break;\n          case 'update':\n            dispatch(recordsAction.updateRecord(collectionName, event.record));\n            break;\n          case 'delete':\n            dispatch(recordsAction.deleteRecord(collectionName, event.record));\n            break;\n          default:\n            break;\n        }\n      }).then(() => {\n        dispatch(subscriptionsAction.addSubscription(collectionName));\n      }).catch(tempErrorHandler));\n    },\n    unsubscribe: async collectionName => {\n      if (collectionName) {\n        await (client == null ? void 0 : client.realtime.unsubscribe(collectionName).then(() => {\n          dispatch(subscriptionsAction.deleteSubscription(collectionName));\n        }).catch(tempErrorHandler));\n      } else {\n        await (client == null ? void 0 : client.realtime.unsubscribe().then(() => {\n          dispatch(subscriptionsAction.setSubscriptions([]));\n        }).catch(tempErrorHandler));\n      }\n    },\n    fetch: async collectionName => {\n      await (client == null ? void 0 : client.collection(collectionName).getFullList(200).then(records => {\n        dispatch(recordsAction.setRecords(collectionName, records));\n      }).catch(tempErrorHandler));\n    },\n    create: async (collectionName, record) => {\n      return await (client == null ? void 0 : client.collection(collectionName).create(record).catch(tempErrorHandler));\n    },\n    update: async (collectionName, recordId, record) => {\n      return await (client == null ? void 0 : client.collection(collectionName).update(recordId, record).catch(tempErrorHandler));\n    },\n    delete: async (collectionName, recordId) => {\n      return await (client == null ? void 0 : client.collection(collectionName).delete(recordId).catch(tempErrorHandler));\n    }\n  };\n  useEffect(() => {\n    if (props.collections) {\n      props.collections.forEach(async collectionName => {\n        await actions.fetch(collectionName);\n        await actions.subscribe(collectionName);\n      });\n    }\n    return () => {\n      (async () => {\n        await actions.unsubscribe();\n      })();\n    };\n  }, [props.collections]);\n  return /*#__PURE__*/React.createElement(ContentContext.Provider, {\n    value: actions\n  }, props.children);\n};","map":{"version":3,"names":["store","React","createContext","useEffect","useClientContext","recordsAction","subscriptionsAction","ContentContext","ContentProvider","props","client","dispatch","useAppDispatch","tempErrorHandler","error","_error$originalError","originalError","name","console","log","JSON","stringify","actions","subscribe","collectionName","realtime","event","action","addRecord","record","updateRecord","deleteRecord","then","addSubscription","catch","unsubscribe","deleteSubscription","setSubscriptions","fetch","collection","getFullList","records","setRecords","create","update","recordId","delete","collections","forEach","createElement","Provider","value","children"],"sources":["/Users/robinrattasep/Downloads/pb_react/node_modules/pocketbase-react/es/context/content.js"],"sourcesContent":["import * as store from '../store/store';\nimport * as React from 'react';\nimport { createContext, useEffect } from 'react';\nimport { useClientContext } from '../hooks/useClientContext';\nimport { recordsAction } from '../store/actions';\nimport { subscriptionsAction } from '../store/actions';\nexport const ContentContext = createContext({});\nexport const ContentProvider = props => {\n  const client = useClientContext();\n  const dispatch = store.useAppDispatch;\n  function tempErrorHandler(error) {\n    var _error$originalError;\n    // TODO: Handle error\n    // IDEA: Create new ErrorContext and Update it with error\n    if ((error == null ? void 0 : (_error$originalError = error.originalError) == null ? void 0 : _error$originalError.name) !== 'AbortError') {\n      console.log('Error in content provider', JSON.stringify(error));\n    }\n  }\n  const actions = {\n    subscribe: async collectionName => {\n      await (client == null ? void 0 : client.realtime.subscribe(collectionName, event => {\n        switch (event.action) {\n          case 'create':\n            dispatch(recordsAction.addRecord(collectionName, event.record));\n            break;\n          case 'update':\n            dispatch(recordsAction.updateRecord(collectionName, event.record));\n            break;\n          case 'delete':\n            dispatch(recordsAction.deleteRecord(collectionName, event.record));\n            break;\n          default:\n            break;\n        }\n      }).then(() => {\n        dispatch(subscriptionsAction.addSubscription(collectionName));\n      }).catch(tempErrorHandler));\n    },\n    unsubscribe: async collectionName => {\n      if (collectionName) {\n        await (client == null ? void 0 : client.realtime.unsubscribe(collectionName).then(() => {\n          dispatch(subscriptionsAction.deleteSubscription(collectionName));\n        }).catch(tempErrorHandler));\n      } else {\n        await (client == null ? void 0 : client.realtime.unsubscribe().then(() => {\n          dispatch(subscriptionsAction.setSubscriptions([]));\n        }).catch(tempErrorHandler));\n      }\n    },\n    fetch: async collectionName => {\n      await (client == null ? void 0 : client.collection(collectionName).getFullList(200).then(records => {\n        dispatch(recordsAction.setRecords(collectionName, records));\n      }).catch(tempErrorHandler));\n    },\n    create: async (collectionName, record) => {\n      return await (client == null ? void 0 : client.collection(collectionName).create(record).catch(tempErrorHandler));\n    },\n    update: async (collectionName, recordId, record) => {\n      return await (client == null ? void 0 : client.collection(collectionName).update(recordId, record).catch(tempErrorHandler));\n    },\n    delete: async (collectionName, recordId) => {\n      return await (client == null ? void 0 : client.collection(collectionName).delete(recordId).catch(tempErrorHandler));\n    }\n  };\n  useEffect(() => {\n    if (props.collections) {\n      props.collections.forEach(async collectionName => {\n        await actions.fetch(collectionName);\n        await actions.subscribe(collectionName);\n      });\n    }\n    return () => {\n      (async () => {\n        await actions.unsubscribe();\n      })();\n    };\n  }, [props.collections]);\n  return /*#__PURE__*/React.createElement(ContentContext.Provider, {\n    value: actions\n  }, props.children);\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}