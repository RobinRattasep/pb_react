{"ast":null,"code":"var _jsxFileName = \"/Users/robinrattasep/Downloads/pb_react/src/Auth.js\",\n  _s = $RefreshSig$();\nimport pb from \"lib/pocketbase\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Auth() {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const isLogged = pb.authStore.model.isLogged;\n  async function login(data) {\n    setIsLoading(true);\n    try {\n      const authData = await pb.collection(\"users\").authWithPassword(data.email, data.password);\n      setIsLoading(false);\n    } catch (error) {\n      alert(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"LOGGED IN: \", isLogged & pb.authStore.model.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(login),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"email\",\n        ...register(\"email\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        ...register(\"password\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? \"Loading...\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Auth, \"DhlM5DTsZKLY3/mFxniAohnHkyo=\", false, function () {\n  return [useForm];\n});\n_c = Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["pb","useState","useForm","jsxDEV","_jsxDEV","Fragment","_Fragment","Auth","_s","isLoading","setIsLoading","register","handleSubmit","isLogged","authStore","model","login","data","authData","collection","authWithPassword","email","password","error","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/robinrattasep/Downloads/pb_react/src/Auth.js"],"sourcesContent":["import pb from \"lib/pocketbase\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nexport default function Auth() {\n  const [isLoading, setIsLoading] = useState(false);\n  const { register, handleSubmit } = useForm();\nconst isLogged = pb.authStore.model.isLogged;\n  async function login(data) {\n    setIsLoading(true);\n    try {\n        const authData = await pb.collection(\"users\").authWithPassword(data.email, data.password);\n        setIsLoading(false);\n    } catch (error) {\n        alert(error);\n    }\n  }\n\n  return (\n    <>\n      {isLoading && <h1>Loading...</h1>}\n      <h1>\n        LOGGED IN: {isLogged & pb.authStore.model.email}\n      </h1>\n      <form onSubmit={handleSubmit(login)}>\n        <input type=\"text\" placeholder=\"email\" {...register(\"email\")} />\n        <input type=\"password\" placeholder=\"password\" {...register(\"password\")} />\n        <button type=\"submit\" disabled={isLoading}>\n          {isLoading ? \"Loading...\" : \"Login\"}\n        </button>\n      </form>\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,EAAE,MAAM,gBAAgB;AAC/B,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAAEU,QAAQ;IAAEC;EAAa,CAAC,GAAGV,OAAO,EAAE;EAC9C,MAAMW,QAAQ,GAAGb,EAAE,CAACc,SAAS,CAACC,KAAK,CAACF,QAAQ;EAC1C,eAAeG,KAAKA,CAACC,IAAI,EAAE;IACzBP,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACA,MAAMQ,QAAQ,GAAG,MAAMlB,EAAE,CAACmB,UAAU,CAAC,OAAO,CAAC,CAACC,gBAAgB,CAACH,IAAI,CAACI,KAAK,EAAEJ,IAAI,CAACK,QAAQ,CAAC;MACzFZ,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC,OAAOa,KAAK,EAAE;MACZC,KAAK,CAACD,KAAK,CAAC;IAChB;EACF;EAEA,oBACEnB,OAAA,CAAAE,SAAA;IAAAmB,QAAA,GACGhB,SAAS,iBAAIL,OAAA;MAAAqB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACjCzB,OAAA;MAAAqB,QAAA,GAAI,aACS,EAACZ,QAAQ,GAAGb,EAAE,CAACc,SAAS,CAACC,KAAK,CAACM,KAAK;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5C,eACLzB,OAAA;MAAM0B,QAAQ,EAAElB,YAAY,CAACI,KAAK,CAAE;MAAAS,QAAA,gBAClCrB,OAAA;QAAO2B,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,OAAO;QAAA,GAAKrB,QAAQ,CAAC,OAAO;MAAC;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eAChEzB,OAAA;QAAO2B,IAAI,EAAC,UAAU;QAACC,WAAW,EAAC,UAAU;QAAA,GAAKrB,QAAQ,CAAC,UAAU;MAAC;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eAC1EzB,OAAA;QAAQ2B,IAAI,EAAC,QAAQ;QAACE,QAAQ,EAAExB,SAAU;QAAAgB,QAAA,EACvChB,SAAS,GAAG,YAAY,GAAG;MAAO;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC5B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ;EAAA,gBACN;AAEP;AAACrB,EAAA,CA7BuBD,IAAI;EAAA,QAESL,OAAO;AAAA;AAAAgC,EAAA,GAFpB3B,IAAI;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}